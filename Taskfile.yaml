---
version: 3
vars:
  PROJECT_NAME:
    sh: echo ${PWD##*/}
  BRANCH:
    sh: if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then echo $(git rev-parse --abbrev-ref HEAD); else echo main ; fi

dotenv: ['.env', '{{.HOME}}/.env']

tasks:
  watch:
    desc: Watch files in presentation/ and rerun task serve on changes
    cmds:
      - |
        find {{ .presentation }} -type f | entr -r task serve
    silent: true
    vars:
      presentation: presentations/devops

  serve:
    desc: Run dev server
    cmds:
      - |
        dagger call -m github.com/stuttgart-things/dagger/hugo@v0.10.0 serve \
        --config {{ .presentation }}/hugo.toml \
        --content {{ .presentation }} \
        up --progress plain
    vars:
      presentation: presentations/devops

  do:
    desc: Select a task to run
    cmds:
      - |
        task=$(yq e '.tasks | keys' Taskfile.yaml | sed 's/^- //' | gum choose)
        task ${task}

  commit:
    desc: Commit + push code into branch
    cmds:
      - rm -rf dist/
      - git branch --set-upstream-to=origin/{{ .BRANCH }}
      - git pull
      - |
        git add *
        if [[ -n $(git status --porcelain) ]]; then
          echo "committing changes"
          echo "ENTER COMMIT MESSAGE"
          COMMIT_MESSAGE=$(echo $(gum choose "feat: {{ .BRANCH }}" "fix: {{ .BRANCH }}" "BREAKING CHANGE: {{ .BRANCH }}" "ENTER CUSTOM COMMIT MESSAGE"))

          if [ "$COMMIT_MESSAGE" == "ENTER CUSTOM COMMIT MESSAGE" ]; then
            COMMIT_MESSAGE=$(echo $(gum input --placeholder "scope" --value "commit to {{ .BRANCH }}"))
          fi

          git commit --allow-empty -a -m "$(echo ${COMMIT_MESSAGE})"
        else
          echo "no changes"
        fi
        git push origin -u {{ .BRANCH }}

  lychee:
    desc: Check links with lychee
    cmds:
      - |
        LYCHEE=$(command -v lychee 2>/dev/null) || true
        if [ -z "$LYCHEE" ]; then
          LYCHEE_VERSION='v0.15.1'	# current stable version
          LYCHEE_TMP='/tmp/'
          LYCHEE_FILE="${LYCHEE_TMP}lychee-${LYCHEE_VERSION}-x86_64-unknown-linux-gnu.tar.gz"
          wget "https://github.com/lycheeverse/lychee/releases/download/${LYCHEE_VERSION}/lychee-${LYCHEE_VERSION}-x86_64-unknown-linux-gnu.tar.gz" -O "$LYCHEE_FILE"
          tar -C /usr/local/bin -xzvf "$LYCHEE_FILE"
        fi
      - git ls-files | grep -E -v '.png$|.ico$' | xargs lychee
